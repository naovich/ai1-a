{
  "messages": [
    {
      "role": "user",
      "content": "donne moi le code react typescript d'un composant NumericStepper stylisÃ© en tailwind",
      "metadata": {
        "timestamp": "2024-10-28T18:05:35.596Z",
        "provider": "gemini",
        "model": "gemini-pro"
      }
    },
    {
      "role": "assistant",
      "content": "```typescript\nimport React, { useState } from \"react\";\nimport { TailwindView } from \"tailwind-rn\";\n\ninterface NumericStepperProps {\n  initialCount: number;\n  minCount?: number;\n  maxCount?: number;\n  onCountChange: (count: number) => void;\n}\n\nconst NumericStepper: React.FC<NumericStepperProps> = ({\n  initialCount,\n  minCount = 1,\n  maxCount = 100,\n  onCountChange,\n}) => {\n  const [count, setCount] = useState(initialCount);\n\n  const incrementCount = () => {\n    if (count < maxCount) {\n      setCount(count + 1);\n      onCountChange(count + 1);\n    }\n  };\n\n  const decrementCount = () => {\n    if (count > minCount) {\n      setCount(count - 1);\n      onCountChange(count - 1);\n    }\n  };\n\n  return (\n    <TailwindView style={styles.container}>\n      <TailwindView style={styles.button} onPress={decrementCount}>\n        <TailwindView style={styles.minusIcon} />\n      </TailwindView>\n      <TailwindView style={styles.input}>{count}</TailwindView>\n      <TailwindView style={styles.button} onPress={incrementCount}>\n        <TailwindView style={styles.plusIcon} />\n      </TailwindView>\n    </TailwindView>\n  );\n};\n\nconst styles = {\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: 120,\n    height: 32,\n    borderRadius: 4,\n    backgroundColor: \"#e0e0e0\",\n  },\n  button: {\n    width: 32,\n    height: 32,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    width: 48,\n    height: 32,\n    textAlign: \"center\",\n    fontSize: 16,\n  },\n  minusIcon: {\n    width: 8,\n    height: 2,\n    backgroundColor: \"black\",\n  },\n  plusIcon: {\n    width: 8,\n    height: 8,\n    borderWidth: 2,\n    borderColor: \"black\",\n    transform: [{ rotate: \"45deg\" }],\n  },\n};\n\nexport default NumericStepper;\n```",
      "metadata": {
        "timestamp": "2024-10-28T18:05:44.873Z",
        "provider": "gemini",
        "model": "gemini-pro"
      }
    }
  ],
  "lastUpdated": "2024-10-28T18:05:44.874Z",
  "chatInfo": {
    "user": "Claude",
    "chatName": "chat_1730138699586"
  }
}